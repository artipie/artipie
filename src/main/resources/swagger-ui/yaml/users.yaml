openapi: "3.0.0"
info:
  version: 1.0.0
  title: Artipie - OpenAPI 3.0
  description:
    This is Atripie Server based on the OpenAPI 3.0 specification.
  license:
    name: MIT
externalDocs:
  description: Find out more about Artipie
  url: https://github.com/artipie
tags:
  - name: users
    description: Operations about users
paths:
  /api/v1/users:
    get:
      summary: List all users.
      operationId: listAllUsers
      tags:
        - users
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: A list of the existing users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/users/{uname}:
    get:
      summary: Get user info.
      operationId: getUser
      tags:
        - users
      parameters:
        - name: uname
          in: path
          required: true
          description: User name
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '404':
          description: User does not exist
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Create or replace user.
      operationId: putUser
      tags:
        - users
      parameters:
        - name: uname
          in: path
          required: true
          description: User name
          schema:
            type: string
      requestBody:
        description: User info json
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullUser'
      security:
        - bearerAuth: [ ]
      responses:
        '201':
          description: User successfully added
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete user info.
      operationId: deleteUser
      tags:
        - users
      parameters:
        - name: uname
          in: path
          required: true
          description: User name
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: User removed successfully
        '404':
          description: User does not exist
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/users/{uname}/alter/password:
    post:
      summary: Alter user password.
      operationId: alterPassword
      tags:
        - users
      parameters:
        - name: uname
          in: path
          required: true
          description: User name
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Old and new password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlterPassword'
      responses:
        '200':
          description: Password changed successfully
        '404':
          description: User does not exist
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/users/{uname}/disable:
    post:
      summary: Disable user.
      operationId: disable
      tags:
        - users
      parameters:
        - name: uname
          in: path
          required: true
          description: User name
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: User disabled successfully
        '404':
          description: User does not exist
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/users/{uname}/enable:
    post:
      summary: Enable user.
      operationId: enable
      tags:
        - users
      parameters:
        - name: uname
          in: path
          required: true
          description: User name
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: User enabled successfully
        '404':
          description: User does not exist
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    User:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        email:
          type: string
        groups:
          type: array
          items:
            type: string
    FullUser:
      type: object
      required:
        - type
        - pass
      properties:
        type:
          type: string
        pass:
          type: string
        email:
          type: string
        groups:
          type: array
          items:
            type: string
    AlterPassword:
      type: object
      required:
        - old_pass
        - new_pass
        - new_type
      properties:
        old_pass:
          type: string
        new_pass:
          type: string
        new_type:
          type: string
  responses:
    UnauthorizedError:
      description: "Access token is missing or invalid"
security:
  - bearerAuth: []