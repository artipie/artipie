# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.29
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Djmh.ignoreLock=true
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.artipie.helm.HelmAstoRemoveBench.run

# Run progress: 0.00% complete, ETA 00:20:50
# Fork: 1 of 5
# Warmup Iteration   1: 6.063 ms/op
# Warmup Iteration   2: 5.423 ms/op
# Warmup Iteration   3: 5.376 ms/op
# Warmup Iteration   4: 5.360 ms/op
# Warmup Iteration   5: 5.358 ms/op
Iteration   1: 5.338 ms/op
Iteration   2: 5.340 ms/op
Iteration   3: 5.327 ms/op
Iteration   4: 5.337 ms/op
Iteration   5: 5.349 ms/op
Iteration   6: 5.318 ms/op
Iteration   7: 5.326 ms/op
Iteration   8: 5.320 ms/op
Iteration   9: 5.315 ms/op
Iteration  10: 5.320 ms/op
Iteration  11: 5.318 ms/op
Iteration  12: 5.306 ms/op
Iteration  13: 5.319 ms/op
Iteration  14: 5.315 ms/op
Iteration  15: 5.305 ms/op
Iteration  16: 5.310 ms/op
Iteration  17: 5.333 ms/op
Iteration  18: 5.332 ms/op
Iteration  19: 5.332 ms/op
Iteration  20: 5.332 ms/op

# Run progress: 20.00% complete, ETA 00:16:43
# Fork: 2 of 5
# Warmup Iteration   1: 6.054 ms/op
# Warmup Iteration   2: 5.377 ms/op
# Warmup Iteration   3: 5.335 ms/op
# Warmup Iteration   4: 5.326 ms/op
# Warmup Iteration   5: 5.331 ms/op
Iteration   1: 5.312 ms/op
Iteration   2: 5.299 ms/op
Iteration   3: 5.308 ms/op
Iteration   4: 5.312 ms/op
Iteration   5: 5.300 ms/op
Iteration   6: 5.305 ms/op
Iteration   7: 5.308 ms/op
Iteration   8: 5.304 ms/op
Iteration   9: 5.317 ms/op
Iteration  10: 5.308 ms/op
Iteration  11: 5.304 ms/op
Iteration  12: 5.305 ms/op
Iteration  13: 5.304 ms/op
Iteration  14: 5.282 ms/op
Iteration  15: 5.302 ms/op
Iteration  16: 5.301 ms/op
Iteration  17: 5.293 ms/op
Iteration  18: 5.315 ms/op
Iteration  19: 5.290 ms/op
Iteration  20: 5.295 ms/op

# Run progress: 40.00% complete, ETA 00:12:32
# Fork: 3 of 5
# Warmup Iteration   1: 6.110 ms/op
# Warmup Iteration   2: 5.477 ms/op
# Warmup Iteration   3: 5.446 ms/op
# Warmup Iteration   4: 5.432 ms/op
# Warmup Iteration   5: 5.410 ms/op
Iteration   1: 5.401 ms/op
Iteration   2: 5.412 ms/op
Iteration   3: 5.408 ms/op
Iteration   4: 5.386 ms/op
Iteration   5: 5.397 ms/op
Iteration   6: 5.381 ms/op
Iteration   7: 5.393 ms/op
Iteration   8: 5.383 ms/op
Iteration   9: 5.389 ms/op
Iteration  10: 5.382 ms/op
Iteration  11: 5.397 ms/op
Iteration  12: 5.366 ms/op
Iteration  13: 5.377 ms/op
Iteration  14: 5.395 ms/op
Iteration  15: 5.393 ms/op
Iteration  16: 5.382 ms/op
Iteration  17: 5.393 ms/op
Iteration  18: 5.378 ms/op
Iteration  19: 5.381 ms/op
Iteration  20: 5.383 ms/op

# Run progress: 60.00% complete, ETA 00:08:21
# Fork: 4 of 5
# Warmup Iteration   1: 6.150 ms/op
# Warmup Iteration   2: 5.449 ms/op
# Warmup Iteration   3: 5.439 ms/op
# Warmup Iteration   4: 5.403 ms/op
# Warmup Iteration   5: 5.394 ms/op
Iteration   1: 5.381 ms/op
Iteration   2: 5.385 ms/op
Iteration   3: 5.362 ms/op
Iteration   4: 5.373 ms/op
Iteration   5: 5.372 ms/op
Iteration   6: 5.365 ms/op
Iteration   7: 5.361 ms/op
Iteration   8: 5.361 ms/op
Iteration   9: 5.359 ms/op
Iteration  10: 5.370 ms/op
Iteration  11: 5.365 ms/op
Iteration  12: 5.354 ms/op
Iteration  13: 5.352 ms/op
Iteration  14: 5.375 ms/op
Iteration  15: 5.365 ms/op
Iteration  16: 5.362 ms/op
Iteration  17: 5.361 ms/op
Iteration  18: 5.362 ms/op
Iteration  19: 5.366 ms/op
Iteration  20: 5.363 ms/op

# Run progress: 80.00% complete, ETA 00:04:10
# Fork: 5 of 5
# Warmup Iteration   1: 6.104 ms/op
# Warmup Iteration   2: 5.416 ms/op
# Warmup Iteration   3: 5.359 ms/op
# Warmup Iteration   4: 5.359 ms/op
# Warmup Iteration   5: 5.339 ms/op
Iteration   1: 5.348 ms/op
Iteration   2: 5.326 ms/op
Iteration   3: 5.347 ms/op
Iteration   4: 5.338 ms/op
Iteration   5: 5.330 ms/op
Iteration   6: 5.336 ms/op
Iteration   7: 5.325 ms/op
Iteration   8: 5.334 ms/op
Iteration   9: 5.332 ms/op
Iteration  10: 5.331 ms/op
Iteration  11: 5.328 ms/op
Iteration  12: 5.310 ms/op
Iteration  13: 5.326 ms/op
Iteration  14: 5.309 ms/op
Iteration  15: 5.326 ms/op
Iteration  16: 5.315 ms/op
Iteration  17: 5.330 ms/op
Iteration  18: 5.322 ms/op
Iteration  19: 5.325 ms/op
Iteration  20: 5.321 ms/op


Result "com.artipie.helm.HelmAstoRemoveBench.run":
  5.342 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (5.282, 5.342, 5.412), stdev = 0.033
  CI (99.9%): [5.331, 5.353] (assumes normal distribution)


# Run complete. Total time: 00:20:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt  Score   Error  Units
HelmAstoRemoveBench.run  avgt  100  5.342 ± 0.011  ms/op
