# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.29
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Djmh.ignoreLock=true
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.artipie.helm.HelmAstoRemoveBench.run

# Run progress: 0.00% complete, ETA 00:20:50
# Fork: 1 of 5
# Warmup Iteration   1: 7.862 ms/op
# Warmup Iteration   2: 6.979 ms/op
# Warmup Iteration   3: 6.895 ms/op
# Warmup Iteration   4: 6.899 ms/op
# Warmup Iteration   5: 6.871 ms/op
Iteration   1: 6.849 ms/op
Iteration   2: 6.866 ms/op
Iteration   3: 6.850 ms/op
Iteration   4: 6.860 ms/op
Iteration   5: 6.838 ms/op
Iteration   6: 6.851 ms/op
Iteration   7: 6.869 ms/op
Iteration   8: 6.859 ms/op
Iteration   9: 6.880 ms/op
Iteration  10: 6.896 ms/op
Iteration  11: 6.853 ms/op
Iteration  12: 6.856 ms/op
Iteration  13: 6.888 ms/op
Iteration  14: 6.876 ms/op
Iteration  15: 6.878 ms/op
Iteration  16: 6.872 ms/op
Iteration  17: 6.855 ms/op
Iteration  18: 6.839 ms/op
Iteration  19: 6.838 ms/op
Iteration  20: 6.835 ms/op

# Run progress: 20.00% complete, ETA 00:16:43
# Fork: 2 of 5
# Warmup Iteration   1: 7.912 ms/op
# Warmup Iteration   2: 7.013 ms/op
# Warmup Iteration   3: 6.929 ms/op
# Warmup Iteration   4: 6.931 ms/op
# Warmup Iteration   5: 6.901 ms/op
Iteration   1: 6.867 ms/op
Iteration   2: 6.881 ms/op
Iteration   3: 6.881 ms/op
Iteration   4: 6.860 ms/op
Iteration   5: 6.896 ms/op
Iteration   6: 6.870 ms/op
Iteration   7: 6.865 ms/op
Iteration   8: 6.882 ms/op
Iteration   9: 6.867 ms/op
Iteration  10: 6.849 ms/op
Iteration  11: 6.859 ms/op
Iteration  12: 6.864 ms/op
Iteration  13: 6.874 ms/op
Iteration  14: 6.873 ms/op
Iteration  15: 6.867 ms/op
Iteration  16: 6.862 ms/op
Iteration  17: 6.856 ms/op
Iteration  18: 6.857 ms/op
Iteration  19: 6.849 ms/op
Iteration  20: 6.852 ms/op

# Run progress: 40.00% complete, ETA 00:12:32
# Fork: 3 of 5
# Warmup Iteration   1: 7.842 ms/op
# Warmup Iteration   2: 6.944 ms/op
# Warmup Iteration   3: 6.876 ms/op
# Warmup Iteration   4: 6.858 ms/op
# Warmup Iteration   5: 6.841 ms/op
Iteration   1: 6.834 ms/op
Iteration   2: 6.847 ms/op
Iteration   3: 6.820 ms/op
Iteration   4: 6.826 ms/op
Iteration   5: 6.824 ms/op
Iteration   6: 6.819 ms/op
Iteration   7: 6.826 ms/op
Iteration   8: 6.816 ms/op
Iteration   9: 6.842 ms/op
Iteration  10: 6.821 ms/op
Iteration  11: 6.836 ms/op
Iteration  12: 6.813 ms/op
Iteration  13: 6.826 ms/op
Iteration  14: 6.827 ms/op
Iteration  15: 6.805 ms/op
Iteration  16: 6.798 ms/op
Iteration  17: 6.850 ms/op
Iteration  18: 6.874 ms/op
Iteration  19: 6.836 ms/op
Iteration  20: 6.826 ms/op

# Run progress: 60.00% complete, ETA 00:08:21
# Fork: 4 of 5
# Warmup Iteration   1: 7.863 ms/op
# Warmup Iteration   2: 6.965 ms/op
# Warmup Iteration   3: 7.006 ms/op
# Warmup Iteration   4: 6.887 ms/op
# Warmup Iteration   5: 6.866 ms/op
Iteration   1: 6.864 ms/op
Iteration   2: 6.844 ms/op
Iteration   3: 6.840 ms/op
Iteration   4: 6.844 ms/op
Iteration   5: 6.844 ms/op
Iteration   6: 6.846 ms/op
Iteration   7: 6.842 ms/op
Iteration   8: 6.842 ms/op
Iteration   9: 6.850 ms/op
Iteration  10: 6.840 ms/op
Iteration  11: 6.837 ms/op
Iteration  12: 6.840 ms/op
Iteration  13: 6.828 ms/op
Iteration  14: 6.840 ms/op
Iteration  15: 6.826 ms/op
Iteration  16: 6.829 ms/op
Iteration  17: 6.830 ms/op
Iteration  18: 6.846 ms/op
Iteration  19: 6.835 ms/op
Iteration  20: 6.818 ms/op

# Run progress: 80.00% complete, ETA 00:04:10
# Fork: 5 of 5
# Warmup Iteration   1: 7.865 ms/op
# Warmup Iteration   2: 6.986 ms/op
# Warmup Iteration   3: 6.975 ms/op
# Warmup Iteration   4: 6.944 ms/op
# Warmup Iteration   5: 6.905 ms/op
Iteration   1: 6.886 ms/op
Iteration   2: 6.895 ms/op
Iteration   3: 6.888 ms/op
Iteration   4: 6.897 ms/op
Iteration   5: 6.895 ms/op
Iteration   6: 6.880 ms/op
Iteration   7: 6.898 ms/op
Iteration   8: 6.884 ms/op
Iteration   9: 6.896 ms/op
Iteration  10: 6.892 ms/op
Iteration  11: 6.903 ms/op
Iteration  12: 6.904 ms/op
Iteration  13: 6.888 ms/op
Iteration  14: 6.883 ms/op
Iteration  15: 6.895 ms/op
Iteration  16: 6.898 ms/op
Iteration  17: 6.900 ms/op
Iteration  18: 6.894 ms/op
Iteration  19: 6.910 ms/op
Iteration  20: 6.883 ms/op


Result "com.artipie.helm.HelmAstoRemoveBench.run":
  6.858 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (6.798, 6.858, 6.910), stdev = 0.026
  CI (99.9%): [6.849, 6.867] (assumes normal distribution)


# Run complete. Total time: 00:20:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt  Score   Error  Units
HelmAstoRemoveBench.run  avgt  100  6.858 ± 0.009  ms/op
